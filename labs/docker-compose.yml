services:
  rabbitmq:
    image: rabbitmq:3.12.4-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped
    networks:
      - labs

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml  # Verifique o caminho
      - ./loki/data:/loki/data
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - labs
    depends_on:
      - promtail

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yaml
      - ./promtail/log:/var/log
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - labs

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager/data:/alertmanager/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    depends_on:
      - prometheus
    networks:
      - labs

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - labs
    depends_on:
      - loki
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "root:root"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - labs
    depends_on:
      - prometheus
      - loki
      - tempo

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "admin"
      MYSQL_ROOT_PASSWORD: "admin"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - labs
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME: keycloak
      KC_FRONTEND_URL: http://keycloak:8443
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HTTP_PORT: 8443
    ports:
      - 8443:8443
      - 9000:9000
    command: start-dev
    depends_on:
      - mysql
    networks:
      - labs

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"   # tempo
      - "4320:4320"  # OTLP gRPC (Recebe do OTel Collector)
      - "4321:4321"  # OTLP HTTP (Recebe do OTel Collector)
    volumes:
      - ./tempo/tempo-config.yml:/etc/tempo/tempo.yaml
      - tempo_data:/var/lib/tempo/traces
    command: [ "-config.file=/etc/tempo/tempo.yaml" ]

    networks:
      - labs
  # Generate fake traces...
  k6-tracing:
    image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
    environment:
      - ENDPOINT=otel-collector:4318
    restart: always
    depends_on:
      - otel-collector
    networks:
      - labs

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otlp/otel-collector-config.yml:/etc/otel-collector-config.yml
      - otel_data:/var/log
    ports:
      - 4317:4317
      - 4318:4318
    networks:
      - labs

volumes:
  mysql_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
  tempo_data:
    driver: local
  otel_data:
    driver: local
  loki_data:
    driver: local
networks:
  labs: 
    name: labs
